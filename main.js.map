{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/example-laminations.ts","webpack:///./src/app/lamination-builder/lamination-builder.component.css","webpack:///./src/app/lamination-builder/lamination-builder.component.html","webpack:///./src/app/lamination-builder/lamination-builder.component.ts","webpack:///./src/app/lamination-renderer/canvas-renderer.ts","webpack:///./src/app/lamination-renderer/svg-renderer.ts","webpack:///./src/app/lamination-viewer/lamination-viewer.component.css","webpack:///./src/app/lamination-viewer/lamination-viewer.component.html","webpack:///./src/app/lamination-viewer/lamination-viewer.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n.svg {\\n  max-width: 100px;\\n  max-height: 100px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uc3ZnIHtcbiAgbWF4LXdpZHRoOiAxMDBweDtcbiAgbWF4LWhlaWdodDogMTAwcHg7XG59XG4iXX0= */\"","module.exports = \"\\n<app-lamination-builder></app-lamination-builder>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  svgSource = `\n<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <circle cx=\"50\" cy=\"50\" r=\"50\"/>\n</svg>\n  `\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LaminationBuilderComponent } from './lamination-builder/lamination-builder.component';\nimport { LaminationViewerComponent } from './lamination-viewer/lamination-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LaminationBuilderComponent,\n    LaminationViewerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { LaminationState } from './builder-state';\nimport { Observable, from } from 'rxjs';\nimport { NaryFraction, Chord, Polygon, PullbackLamination, BranchSpec, makeBuilder, makeBranchSpec } from 'laminations-lib';\nimport { map } from 'rxjs/operators';\n\nconst binary = NaryFraction.parseFactory(2)\nconst ternary = NaryFraction.parseFactory(3)\nconst quaternary = NaryFraction.parseFactory(4)\nconst quintary = NaryFraction.parseFactory(5)\n\nexport interface LaminationData {\n  base: number\n  leaves: Polygon[]\n  branchSpecs: BranchSpec[]\n  name: string\n}\n\nexport interface LaminationDefinition {\n  base: number\n  leaves: Array<{\n    points: string[]\n  }>\n  branches: Array<{\n    chord: [string, string]\n    endpoints: string[]\n  }>\n  name?: string\n}\n\nexport const parseLaminationDefinition = (def: LaminationDefinition): LaminationData => {\n  const base = def.base\n  const parsePoint = NaryFraction.parseFactory(base)\n  \n  const leaves = def.leaves.map(poly => Polygon.new(poly.points.map(parsePoint)))\n\n  const branchSpecs = def.branches.map((branchDef) => {\n    const chordPoints = branchDef.chord.map(parsePoint)\n    const chord = Chord.new(chordPoints[0], chordPoints[1])\n\n    const endpoints = branchDef.endpoints.map(parsePoint)\n\n    return makeBranchSpec(chord, ...endpoints)\n  })\n\n  return {\n    base,\n    leaves,\n    branchSpecs,\n    name: def.name || 'lamination',\n  }\n}\n\nexport const pullbackObservable = ({ leaves, branchSpecs, base }: LaminationData): Observable<LaminationState> => {\n  const branches = makeBuilder(base)(branchSpecs)\n  return from(PullbackLamination.iterates(leaves, branches))\n    .pipe(\n      map(lamination => ({\n        lamination,\n        criticalChords: branchSpecs.map(spec => spec.chord),\n      }))\n    )\n}\n\n\nexport const rabbitLamination = (): LaminationData => {\n  const criticalChord = Chord.new(\n    binary('_001'), // 1/7\n    binary('1_010') // 9/14\n  )\n  \n  const branchSpecs = [\n    makeBranchSpec(criticalChord, criticalChord.lower)\n  ]\n\n  const startingTriangle = Polygon.new([\n    binary('_001'), // 1/7\n    binary('_010'), // 2/7\n    binary('_100'), // 4/7\n  ])\n\n  return { leaves: [startingTriangle], branchSpecs, base: 2, name: \"Rabbit\" }\n}\n\nexport const rabbitLamination_ternary = (): LaminationData => {\n  const pointA = ternary('_001')\n  const pointB = ternary('1_010')\n  const pointC = ternary('2_010')\n\n  const criticalA = Chord.new(pointA, pointB)\n  const criticalB = Chord.new(pointB, pointC)\n  const criticalC = Chord.new(pointC, pointA)\n  \n  const branchSpecs = [\n    makeBranchSpec(criticalA, pointA),\n    makeBranchSpec(criticalB, pointB),\n    makeBranchSpec(criticalC, pointC)\n  ]\n\n  const startingTriangle = Polygon.new([\n    ternary('_001'),\n    ternary('_010'),\n    ternary('_100'),\n  ])\n\n  return { leaves: [startingTriangle], branchSpecs, base: 3, name: \"Rabbit (ternary)\" }\n}\n\nexport const ternarySymmetricLamination = (): LaminationData => {\n  const criticalA = Chord.new(\n    ternary('_01'), // 1/8\n    ternary('2_10') // 19/24\n  )\n  const criticalB = Chord.new(\n    ternary('0_21'), // 7/24\n    ternary('_12') // 5/8\n  )\n  \n  const branchSpecs = [\n    makeBranchSpec(criticalA, criticalA.lower),\n    makeBranchSpec(criticalB, criticalB.upper),\n  ]\n\n  const leaves = [\n    Chord.new(\n      ternary('_01'), // 1/8\n      ternary('_21') // 7/8\n    ),\n    Chord.new(\n      ternary('_10'), // 3/8\n      ternary('_12') // 5/8\n    )\n  ].map(Polygon.fromChord)\n\n  return { leaves: leaves, branchSpecs, base: 3, name: \"Temple\" }\n}\n\nexport const criticalTriangleGap_ternary = (): LaminationData => {\n  const pointA = ternary('_002')\n  const pointB = ternary('1_020')\n  const pointC = ternary('2_020')\n  \n  const branchSpecs = [\n    makeBranchSpec(Chord.new(pointA, pointB), pointA),\n    makeBranchSpec(Chord.new(pointB, pointC), pointB),\n    makeBranchSpec(Chord.new(pointC, pointA), pointC),\n  ]\n\n  const leaves = [\n    Chord.new(ternary('_011'), ternary('_020')),\n    Chord.new(ternary('_002'), ternary('_101')),\n    Chord.new(ternary('_110'), ternary('_200')),\n  ].map(Polygon.fromChord)\n\n  return { leaves: leaves, branchSpecs, base: 3, name: \"Critical Triangle with Gap\" }\n}\n\nexport const criticalTriangleGapIRT_ternary = (): LaminationData => {\n  const pointA = ternary('_002')\n  const pointB = ternary('_101')\n  const pointC = ternary('2_011')\n  const pointD = ternary('2_020')\n\n  const criticalA = Chord.new(pointA, pointD)\n  const criticalB = Chord.new(pointB, pointC)\n  \n  const branchSpecs = [\n    makeBranchSpec(criticalA, pointD),\n    makeBranchSpec(criticalB, pointC),\n  ]\n\n  const leaves = [\n    Polygon.new([\n      pointA,\n      pointB,\n      ternary('_201')\n    ]),\n\n    Polygon.new([\n      ternary('_011'),\n      ternary('_020'),\n      ternary('_012')\n    ]),\n\n    Polygon.new([\n      ternary('_110'),\n      ternary('_200'),\n      ternary('_120')\n    ])\n  ]\n\n  return { leaves: leaves, branchSpecs, base: 3, name: \"Critical Identity Return Triangle\" }\n}\n\nexport const irq_fat_quaternary = (): LaminationData => {\n  const pointA = quaternary('0_233')\n  const pointB = quaternary('_030')\n  const pointC = quaternary('1_300')\n  const pointD = quaternary('1_302')\n  const pointE = quaternary('_230')\n  const pointF = quaternary('_323')\n\n  const branchSpecs = [\n    makeBranchSpec(Chord.new(pointA, pointF), pointA),\n    makeBranchSpec(Chord.new(pointB, pointC), pointC),\n    makeBranchSpec(Chord.new(pointD, pointE), pointD),\n  ]\n\n  const middleSquare = Polygon.new([\n    pointB,\n    quaternary('_130'),\n    pointE,\n    pointF,\n  ])\n\n  return { leaves: [middleSquare], branchSpecs, base: 4, name: \"Fat Identity Return Quadrilateral\" }\n}\n\nexport const irq_thin_quaternary = (): LaminationData => {\n  const pointA = quaternary('_010')\n  const pointB = quaternary('_100')\n  const pointC = quaternary('2_001')\n  const pointD = quaternary('_200')\n  const pointE = quaternary('3_002')\n  const pointF = quaternary('3_100')\n\n  const branchSpecs = [\n    makeBranchSpec(Chord.new(pointA, pointF), pointF),\n    makeBranchSpec(Chord.new(pointB, pointC), pointC),\n    makeBranchSpec(Chord.new(pointD, pointE), pointE),\n  ]\n\n  const middleSquare = Polygon.new([\n    quaternary('_033'),\n    pointB,\n    pointD,\n    quaternary('_300'),\n  ])\n\n  return { leaves: [middleSquare], branchSpecs, base: 4, name: \"Thin Identity Return Triangle\" }\n}\n\n\nexport const never_close_quintary = (): LaminationData => {\n  const pointA = quintary('0_033')\n  const pointB = quintary('_033')\n  const pointC = quintary('1_330')\n  const pointD = quintary('_200')\n  const pointE = quintary('3_002')\n  const pointF = quintary('_303')\n  const pointG = quintary('_330')\n  const pointH = quintary('4_303')\n\n  const branchSpecs = [\n    makeBranchSpec(Chord.new(pointA, pointF), pointA),\n    makeBranchSpec(Chord.new(pointB, pointC), pointC),\n    makeBranchSpec(Chord.new(pointD, pointE), pointE),\n    makeBranchSpec(Chord.new(pointG, pointH), pointH),\n  ]\n\n  const bigTriangle = Polygon.new([\n    pointB,\n    pointD,\n    quintary('_300')\n  ])\n\n  const mediumTriangle = Polygon.new([\n    quintary('_020'),\n    quintary('_030'),\n    pointF\n  ])\n\n  const smallTriangle = Polygon.new([\n    quintary('_002'),\n    quintary('_003'),\n    pointG\n  ])\n\n  return {\n    leaves: [bigTriangle, mediumTriangle, smallTriangle],\n    branchSpecs,\n    base: 5,\n    name: \"Never Close (quintary)\"\n  }\n}\n\nexport const never_close_quintary_def: LaminationDefinition = {\n  name: 'never close (quintary)',\n  base: 5,\n  leaves: [\n    {points: ['_033', '_200', '_300']},\n    {points: ['_020', '_030', '_303']},\n    {points: ['_002', '_003', '_330']}\n  ],\n  branches: [\n    {\n      chord: ['0_033', '_303'],\n      endpoints: ['0_033']\n    },\n    {\n      chord: ['_033', '1_330'],\n      endpoints: ['1_330']\n    },\n    {\n      chord: ['_200', '3_002'],\n      endpoints: ['3_002']\n    },\n    {\n      chord: ['_330', '4_303'],\n      endpoints: ['4_303']\n    },\n  ]\n}\n\nexport const template = \n`{\n  \"name\": \"EXAMPLE LAMINATION\",\n  \"base\": 3,\n  \"branches\": [\n    {\n      \"chord\": [\"_002\", \"2_020\"],\n      \"endpoints\": [\"2_020\"]\n    },\n    {\n      \"chord\": [\"_101\", \"2_011\"],\n      \"endpoints\": [\"2_011\"]\n    }\n  ],\n  \"leaves\": [\n    {\"points\": [\"_002\", \"_101\", \"_201\"]},\n    {\"points\": [\"_011\", \"_020\", \"_012\"]},\n    {\"points\": [\"_110\", \"_200\", \"_120\"]}\n  ]\n}\n`\n\n","module.exports = \"\\ninput[type=\\\"file\\\"] {\\n    display: none;\\n}\\n\\n.custom-file-upload {\\n    border: 1px solid #ccc;\\n    display: inline-block;\\n    padding: 6px 12px;\\n    cursor: pointer;\\n}\\n\\n.custom-file-upload:hover {\\n    background-color: #ccc;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGFtaW5hdGlvbi1idWlsZGVyL2xhbWluYXRpb24tYnVpbGRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvbGFtaW5hdGlvbi1idWlsZGVyL2xhbWluYXRpb24tYnVpbGRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLmN1c3RvbS1maWxlLXVwbG9hZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogNnB4IDEycHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uY3VzdG9tLWZpbGUtdXBsb2FkOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xufVxuIl19 */\"","module.exports = \"<div>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"laminationData.name\\\">\\n  <label class=\\\"custom-file-upload\\\">\\n      <input type=\\\"file\\\" (change)=\\\"uploadFile($event.target)\\\">\\n    Upload JSON\\n  </label>\\n  \\n  <button (click)=\\\"saveTemplateFile()\\\">Save Template</button>\\n  \\n</div>\\n\\n<div>\\n  <strong style=\\\"margin-right: 4px\\\">Pullbacks:</strong>\\n  <input type=\\\"number\\\" [value]=\\\"numPullbacks\\\" (input)=\\\"setNumPullbacks($event.target.value)\\\"\\n    style=\\\"max-width: 40px; margin-right: 4px\\\">\\n  <strong style=\\\"margin-right: 4px\\\">Preview Size:</strong>\\n  <input type=\\\"number\\\" [(ngModel)]=\\\"renderSettings.size\\\"\\n    style=\\\"max-width: 60px; margin-right: 4px\\\">\\n  <button (click)=\\\"generateLamination()\\\">Refresh</button>\\n  <button (click)=\\\"saveSvg()\\\">Export SVG</button>\\n</div>\\n\\n<br/>\\n\\n<app-lamination-viewer [laminationState]=\\\"laminationState\\\" [settings]=\\\"renderSettings\\\"></app-lamination-viewer>\\n\\n<a href=\\\"https://github.com/csfalcione/lamination-builder/\\\" target=\\\"_blank\\\">Source and Documentation</a>\"","import { Component, OnInit } from '@angular/core';\nimport { RenderSettings, LaminationState } from '../builder-state';\nimport { take, scan, map } from 'rxjs/operators'\nimport { makeSvgRenderer } from '../lamination-renderer/svg-renderer';\nimport { saveAs } from 'file-saver'\nimport { pullbackObservable, parseLaminationDefinition, LaminationData } from '../example-laminations'\nimport * as examples from '../example-laminations';\nimport { Polygon, Chord } from 'laminations-lib';\n\ninterface DistinctLaminationState {\n  laminationMap: Map<string, Polygon>,\n  criticalChords: Chord[],\n}\n\n@Component({\n  selector: 'app-lamination-builder',\n  templateUrl: './lamination-builder.component.html',\n  styleUrls: ['./lamination-builder.component.css']\n})\nexport class LaminationBuilderComponent implements OnInit {\n\n  renderSettings: RenderSettings = this.initialRenderSettings()\n  laminationData: LaminationData = examples.rabbitLamination()\n  laminationState: LaminationState = this.laminationStateIdentity()\n\n  numPullbacks = 0\n\n  constructor() { }\n\n  ngOnInit() {\n    setTimeout(() => this.generateLamination())\n  }\n\n\n  generateLamination() {\n    const iterations = this.numPullbacks + 1\n\n    const addLaminationStates = (a: DistinctLaminationState, b: LaminationState): DistinctLaminationState => {\n      const newMap = new Map(a.laminationMap.entries())\n      b.lamination.forEach(poly => {\n        newMap.set(`${poly}`, poly)\n      })\n      return {\n        laminationMap: newMap,\n        criticalChords: b.criticalChords,\n      }\n    }\n\n    const data = this.laminationData\n    pullbackObservable(data)\n      .pipe(\n        scan(addLaminationStates, {laminationMap: new Map(), criticalChords: []}),\n        map(({laminationMap, criticalChords}): LaminationState => {\n          return {lamination: [...laminationMap.values()], criticalChords}\n        }),\n        take(iterations)\n      )\n      .subscribe(state => {\n        this.laminationState = state\n      })\n  }\n\n  setNumPullbacks(input: string) {\n    const parsed = parseInt(input)\n    if (isNaN(parsed)) {\n      return\n    }\n    this.numPullbacks = parsed\n    this.generateLamination()\n  }\n\n  uploadFile(eventTarget) {\n    const file = eventTarget.files[0]\n    const reader = new FileReader()\n\n    const cleanUp = () => {\n      eventTarget.value = ''\n    }\n    const successHandler = () => {\n      try {\n        const definition = JSON.parse(reader.result as string)\n        this.laminationData = parseLaminationDefinition(definition)\n        this.numPullbacks = 0\n        this.generateLamination()\n      } catch (e) {\n        alert(e)\n      } finally {\n        cleanUp()\n      }\n    }\n    const errorHandler = () => {\n      alert(`Error reading ${file.name}`)\n      cleanUp()\n    }\n    reader.addEventListener('load', successHandler)\n    reader.addEventListener('error', errorHandler)\n    reader.readAsText(file)\n  }\n\n  saveTemplateFile() {\n    saveAs(new Blob([examples.template]), 'Example Lamination.json', {\n      type: 'application/json'\n    })\n  }\n\n  saveSvg() {\n    const renderer = makeSvgRenderer(this.renderSettings)\n    const svgString = renderer.render(this.laminationState)\n    const name = this.laminationData.name\n    saveAs(new Blob([svgString]), `${name} - pullback ${this.numPullbacks}.svg`, {\n      type: 'image/svg+xml'\n    })\n  }\n\n  laminationStateIdentity(): LaminationState {\n    return {\n      lamination: [],\n      criticalChords: [],\n    }\n  }\n\n  initialRenderSettings(): RenderSettings {\n    return {\n      renderHyperbolic: true,\n      size: 600,\n      polygonColor: '#CC0000',\n      chordColor: '#000000',\n      criticalChordColor: '#0000AA',\n      backgroundColor: '#DBDBDB',\n      circleColor: '#000000',\n    }\n  }\n\n}\n","import { RenderSettings, LaminationState } from \"../builder-state\";\nimport { LaminationRenderer } from './lamination-renderer';\nimport { Polygon, Chord } from 'laminations-lib';\nimport { makeSVGPath } from './svg-renderer';\n\nexport const makeCanvasRenderer = (ctx: CanvasRenderingContext2D, settings: RenderSettings): LaminationRenderer<void> => {\n  \n  const getRadius = () => Math.floor(settings.size / 2) - 10\n\n  const getMidpoint = (): [number, number] => {\n    const half = settings.size / 2\n    return [half, half]\n  }\n\n  const clearCanvas = () => {\n    const size = settings.size\n    ctx.clearRect(0, 0, size, size)\n  }\n\n  const drawPolygon = (polygon: Polygon) => {\n    const radius = getRadius()\n    const svgPathString = makeSVGPath(polygon, radius, settings.renderHyperbolic)\n    const path = new Path2D(svgPathString)\n\n    ctx.stroke(path)\n    if (polygon.points.length > 2) {\n      ctx.fill(path)\n    }\n  }\n\n  const drawLamination = (lamination: Polygon[]) => {\n    lamination.forEach(drawPolygon)\n  }\n\n  const drawCriticalChords = (chords: Chord[]) => {\n    drawLamination(chords.map(Polygon.fromChord))\n  }\n\n  const drawCircle = (radius) => {\n    ctx.beginPath()\n    ctx.arc(0, 0, radius, 0, 2 * Math.PI)\n    ctx.clip()\n    ctx.closePath()\n    ctx.stroke()\n  }\n\n  const render = (laminationState: LaminationState) => {\n    clearCanvas()\n    const [midX, midY] = getMidpoint()\n    // Transforms space so that origin is in middle of canvas, up is\n    // the positive y direction, and right is the positive x direction.\n    ctx.transform(1, 0, 0, -1, midX, midY)\n\n    ctx.lineWidth = 3\n    ctx.strokeStyle = settings.circleColor\n    drawCircle(getRadius())\n\n    ctx.lineWidth = 2\n    ctx.strokeStyle = settings.chordColor\n    ctx.fillStyle = settings.polygonColor\n    drawLamination(laminationState.lamination)\n\n    ctx.lineWidth = 2\n    ctx.strokeStyle = settings.criticalChordColor\n    drawCriticalChords(laminationState.criticalChords)\n\n    ctx.resetTransform()\n  }\n\n  return {render}\n}","import { Polygon, NaryFraction, Chord } from 'laminations-lib';\nimport { RenderSettings, LaminationState } from '../builder-state';\nimport { LaminationRenderer } from './lamination-renderer';\n\n// JS's % operator performs the remainder operation, not the modulus operation.\n// They behave differently for negatives.\nconst mod = (a, b) => ((a % b) + b) % b\n\nconst toRadians = (t: NaryFraction) => 2 * Math.PI * t.toNumber()\n\nconst svgPoint = (t: NaryFraction, radius: number) => {\n  const angle = toRadians(t)\n  const xCoord = Math.floor(radius * Math.cos(angle))\n  const yCoord = Math.floor(radius * Math.sin(angle))\n  return `${xCoord},${yCoord}`\n}\n\nconst getLinePathTo = (point: NaryFraction, prevPoint: NaryFraction, circleRadius: number, hyperbolic: boolean): string => {\n  if (!hyperbolic) {\n    return `L ${svgPoint(point, circleRadius)}`\n  }\n\n  const chordWidth = mod(point.toNumber() - prevPoint.toNumber(), 1)\n  if (Math.abs(chordWidth - 0.5) < 0.0001) {\n    return getLinePathTo(point, prevPoint, circleRadius, false)\n  }\n  const sweepFlag = chordWidth <= 0.5 ? 0 : 1\n  const arcRadius = circleRadius * Math.tan(Math.PI * Math.min(chordWidth, 1 - chordWidth))\n\n  return `A ${arcRadius},${arcRadius} 0 0,${sweepFlag} ${svgPoint(point, circleRadius)}`\n}\n\nexport const makeSVGPath = (polygon: Polygon, circleRadius: number, hyperbolic: boolean): string => {\n  const pathSpecs = []\n\n  const points = polygon.points\n\n  pathSpecs.push(`M ${svgPoint(points[0], circleRadius)}`)\n\n  for (let i = 1; i < points.length; i++) {\n    const point = points[i]\n    const prevPoint = points[i - 1]\n    pathSpecs.push(getLinePathTo(point, prevPoint, circleRadius, hyperbolic))\n  }\n\n  if (points.length > 2) {\n    pathSpecs.push(getLinePathTo(points[0], points[points.length - 1], circleRadius, hyperbolic))\n  }\n\n  return pathSpecs.join(' ')\n}\n\nconst tag = (name: string, attributes: Object = {}, body: string = ''): string => {\n  const renderedAttributes = Object.entries(attributes)\n    .filter(([key, _]) => attributes.hasOwnProperty(key))\n    .map(([key, val]) => `${key}=\"${val}\"`)\n    .join(' ')\n  return `<${name} ${renderedAttributes}>${body}</${name}>`\n}\n\nconst defaultSvgAttrs = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n}\n\nexport const makeSvgRenderer = (settings: RenderSettings): LaminationRenderer<string> => {\n  const radius = Math.floor(settings.size / 2) - 10\n\n  const render = (laminationState: LaminationState): string => {\n    const midpoint = settings.size / 2\n    const transform = `matrix(1,0,0,-1,${midpoint},${midpoint})`\n\n    const circle = tag('circle', {\n      r: radius,\n      stroke: settings.circleColor,\n      'stroke-width': 3,\n      fill: 'none',\n      transform,\n    })\n\n    const chords = laminationState.lamination\n      .map((polygon: Polygon) => {\n        let strokeWidth = 1\n        if (polygon.toChords().some((chord: Chord) => {\n          const width = chord.upper.toNumber() - chord.lower.toNumber()\n          return width < 0.01 || 1 - width < 0.01\n        })) {\n          strokeWidth = 0.25\n        }\n        return tag('path', {\n          stroke: settings.chordColor,\n          fill: polygon.points.length > 2 ? settings.polygonColor : 'none',\n          'stroke-width': strokeWidth,\n          transform,\n          d: makeSVGPath(polygon, radius, settings.renderHyperbolic)\n        })\n      })\n      .join('')\n    \n    const criticalChords = laminationState.criticalChords\n      .map((chord: Chord) => tag('path', {\n        stroke: settings.criticalChordColor,\n        'stroke-width': 2,\n        fill: 'none',\n        transform,\n        d: makeSVGPath(Polygon.fromChord(chord), radius, settings.renderHyperbolic)\n      }))\n      .join('')\n\n    return tag('svg', {\n      ...defaultSvgAttrs,\n      width: settings.size,\n      height: settings.size,\n      'background-color': settings.backgroundColor,\n    }, `${circle}${chords}${criticalChords}`)\n  }\n\n  return {render}\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xhbWluYXRpb24tdmlld2VyL2xhbWluYXRpb24tdmlld2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<canvas #laminationCanvas [width]=\\\"settings.size\\\" [height]=\\\"settings.size\\\"\\n  style=\\\"background-color: rgb(219, 219, 219)\\\">\\n  Your browser apparently doesn't support HTML5 canvases. Please use\\n  a recent version of Chrome, Firefox, Microsoft Edge, or Safari.\\n</canvas>\\n\\n<br/>\\n\\n<h3>Debug:</h3>\\n<pre style=\\\"background-color: rgb(219, 219, 219); font-family: 'Courier New', Courier, monospace;\\n  max-width: 600px\\\">{{prettyPrint(laminationState.lamination)}}</pre>\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Polygon, NaryFraction } from 'laminations-lib';\nimport { RenderSettings, LaminationState } from '../builder-state';\nimport { makeCanvasRenderer } from '../lamination-renderer/canvas-renderer';\n\n\n@Component({\n  selector: 'app-lamination-viewer',\n  templateUrl: './lamination-viewer.component.html',\n  styleUrls: ['./lamination-viewer.component.css']\n})\nexport class LaminationViewerComponent implements OnInit {\n\n  @Input() settings: RenderSettings\n\n  @Input() laminationState: LaminationState\n\n  @ViewChild('laminationCanvas') canvas: ElementRef\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  ngOnChanges() {\n    const ctx: CanvasRenderingContext2D = this.canvas.nativeElement.getContext('2d')\n    const renderer = makeCanvasRenderer(ctx, this.settings)\n    renderer.render(this.laminationState)\n  }\n\n  prettyPrint(lamination: Polygon[]) {\n    return lamination\n      .sort((a, b) => NaryFraction.compare(a.points[0], b.points[0]))\n      .map(poly => `${poly}`).join(\"\\n\")\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}